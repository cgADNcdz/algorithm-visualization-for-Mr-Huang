{"ast":null,"code":"import _classCallCheck from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/src/app/component/GraphTable.js\";\nimport eventProxy from \"../eventProxy.js\";\n\nvar React = require('react'); //let node = [], link = [];  用不上\n//let selectLink;\n//关于显示代码：此组件作为消息订阅者!\n\n\nvar GraphTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GraphTable, _React$Component);\n\n  function GraphTable(props) {\n    var _this;\n\n    _classCallCheck(this, GraphTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GraphTable).call(this, props));\n    _this.state = {\n      tab: 1,\n      code: '',\n      actions: []\n    };\n    _this.SELECTED_LINK_COLOR = \"#ff0000\";\n    _this.DEFAULT_LINK_COLOR = \"#3a6bdb\";\n    _this.onShowCode = _this.onShowCode.bind(_assertThisInitialized(_assertThisInitialized(_this))); //绑定消息监听函数\n\n    return _this;\n  }\n\n  _createClass(GraphTable, [{\n    key: \"render\",\n    value: function render() {\n      var content = this.setContent(this.props); //props继承自panel，而panel的props来自App\n\n      return React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.state.tab === 1 ? \"#999\" : \"#CCC\"\n        },\n        onClick: this.setPTab.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"\\u9876\\u70B9\"), React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.state.tab === 2 ? \"#999\" : \"#CCC\"\n        },\n        onClick: this.setLTab.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"\\u8FB9\"), React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.state.tab === 3 ? \"#999\" : \"#CCC\"\n        },\n        onClick: this.setMatrixTab.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"\\u77E9\\u9635\"), React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.state.tab === 4 ? \"#999\" : \"#CCC\"\n        },\n        onClick: this.setCodeTab.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"\\u4EE3\\u7801\"), React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.state.tab === 5 ? \"#999\" : \"#CCC\"\n        },\n        onClick: this.setActionTab.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"\\u52A8\\u4F5C\")), React.createElement(\"div\", {\n        id: \"tabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, content));\n    } ///当GraphSVG组件传递代码过来时，调整tab状态，使其处于代码显示栏，同时更新代码\n\n  }, {\n    key: \"onShowCode\",\n    value: function onShowCode(code) {\n      //this.setState({tab:4});  //更新tab状态则会自动跳转到代码栏\n      this.setState({\n        code: code\n      });\n    }\n  }, {\n    key: \"onShowAction\",\n    value: function onShowAction(actions) {\n      this.setState({\n        tab: 5\n      });\n      this.setState({\n        actions: actions\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      eventProxy.on(window.showCode, this.onShowCode); //window.showCode见index.js\n\n      eventProxy.on(window.showAction, this.onShowAction);\n    } //点击“顶点”\n\n  }, {\n    key: \"setPTab\",\n    value: function setPTab() {\n      this.setState({\n        tab: 1\n      });\n    } //点击“边”\n\n  }, {\n    key: \"setLTab\",\n    value: function setLTab() {\n      this.setState({\n        tab: 2\n      });\n    } //点击\"矩阵\"\n\n  }, {\n    key: \"setMatrixTab\",\n    value: function setMatrixTab() {\n      this.setState({\n        tab: 3\n      });\n    } //点击“代码”\n\n  }, {\n    key: \"setCodeTab\",\n    value: function setCodeTab() {\n      this.setState({\n        tab: 4\n      });\n    } //点击\"动作\"\n\n  }, {\n    key: \"setActionTab\",\n    value: function setActionTab() {\n      this.setState({\n        tab: 5\n      });\n    } //点击菜单后渲染\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(_ref) {\n      var node = _ref.node,\n          link = _ref.link;\n\n      switch (this.state.tab) {\n        case 1:\n          //顶点\n          return this.renderPoint(node);\n          break;\n\n        case 2:\n          //边\n          return this.renderLink(link);\n          break;\n\n        case 3:\n          return this.renderMatrix(node, link);\n          break;\n\n        case 4:\n          return this.renderCode();\n          break;\n\n        case 5:\n          return this.renderAction();\n          break;\n      }\n\n      return \"ERROR\";\n    }\n  }, {\n    key: \"renderPoint\",\n    value: function renderPoint(nodes) {\n      var td = nodes.map(function (node) {\n        return React.createElement(\"tr\", {\n          key: node.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, node.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, node.lng), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, node.lat));\n      });\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"\\u5730\\u70B9\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"\\u7ECF\\u5EA6\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"\\u7EAC\\u5EA6\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, td));\n    }\n  }, {\n    key: \"renderLink\",\n    value: function renderLink(links) {\n      var _this2 = this;\n\n      //index应该是link元素在links中的索引\n      var td = links.map(function (link, index) {\n        var ifVisible = link.polyline.isVisible();\n        var color = link.polyline.getStrokeColor();\n        var ifHighlight = color === _this2.SELECTED_LINK_COLOR;\n        return React.createElement(\"tr\", {\n          key: link + \"-\" + index,\n          onClick: _this2.highlightLink(link).bind(_this2),\n          style: {\n            backgroundColor: ifHighlight ? \"#DDD\" : \"#FFF\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, link.node1.name + \" -> \" + link.node2.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, link.dis), React.createElement(\"td\", {\n          onClick: _this2.setLink(link).bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, ifVisible ? \"Yes\" : \"No\"));\n      });\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"\\u8DEF\\u7EBF\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"\\u8DDD\\u79BB\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"\\u9009\\u62E9\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, td));\n    }\n  }, {\n    key: \"renderMatrix\",\n    value: function renderMatrix(nodes, links) {\n      var nodataGrid = React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }); //空格\n\n      var horizonMatrxHead = nodes.map(function (node) {\n        //第一排表头\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, node.name);\n      });\n      var maxtrixContent = nodes.map(function (node) {\n        //表格内容\n        var headName = React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, node.name);\n        var name1 = node.name;\n        var dists = nodes.map(function (node) {\n          var dist;\n          var flag = 0;\n\n          for (var i = 0; i < links.length; i++) {\n            if (name1 == links[i].node1.name && node.name == links[i].node2.name || name1 == links[i].node2.name && node.name == links[i].node1.name) {\n              dist = links[i].dis;\n              flag = 1;\n            }\n          }\n\n          if (flag == 1) //两个点相连\n            return React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 198\n              },\n              __self: this\n            }, dist);else return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, \"\\u221E\");\n        });\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, headName, dists);\n      });\n      return React.createElement(\"table\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, nodataGrid, horizonMatrxHead, maxtrixContent);\n    }\n  }, {\n    key: \"renderCode\",\n    value: function renderCode() {\n      //渲染代码，使用layer  (iframe高度无法使用相对高度，应为tabContent的限制)\n      return React.createElement(\"textarea\", {\n        cols: \"80\",\n        rows: \"30\",\n        value: this.state.code,\n        autoFocus: true,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderAction\",\n    value: function renderAction() {\n      var actions = this.state.actions;\n      var actionContent = actions.map(function (action) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, action));\n      });\n    }\n  }, {\n    key: \"highlightLink\",\n    value: function highlightLink(link) {\n      return function (event) {\n        var _this3 = this;\n\n        var links = this.props.link;\n        links.forEach(function (l) {\n          l.polyline.setStrokeColor(_this3.DEFAULT_LINK_COLOR);\n        });\n        link.polyline.setStrokeColor(this.SELECTED_LINK_COLOR);\n        this.props.updateState(null, links);\n      };\n    }\n  }, {\n    key: \"setLink\",\n    value: function setLink(link) {\n      return function (event) {\n        var links = this.props.link;\n        var visible = link.polyline.isVisible();\n        if (visible) link.polyline.hide();else link.polyline.show();\n        this.props.updateState(null, links);\n      };\n    }\n  }]);\n\n  return GraphTable;\n}(React.Component);\n\nexport default GraphTable;","map":{"version":3,"sources":["/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/src/app/component/GraphTable.js"],"names":["eventProxy","React","require","GraphTable","props","state","tab","code","actions","SELECTED_LINK_COLOR","DEFAULT_LINK_COLOR","onShowCode","bind","content","setContent","width","height","backgroundColor","setPTab","setLTab","setMatrixTab","setCodeTab","setActionTab","setState","on","window","showCode","showAction","onShowAction","node","link","renderPoint","renderLink","renderMatrix","renderCode","renderAction","nodes","td","map","name","lng","lat","links","index","ifVisible","polyline","isVisible","color","getStrokeColor","ifHighlight","highlightLink","node1","node2","dis","setLink","nodataGrid","horizonMatrxHead","maxtrixContent","headName","name1","dists","dist","flag","i","length","actionContent","action","event","forEach","l","setStrokeColor","updateState","visible","hide","show","Component"],"mappings":"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","sourcesContent":["import eventProxy from \"../eventProxy.js\"\nlet React = require('react');\n\n\n//let node = [], link = [];  用不上\n//let selectLink;\n\n\n//关于显示代码：此组件作为消息订阅者!\nclass GraphTable extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tab: 1,\n            code:'',\n            actions:[]\n        };\n        this.SELECTED_LINK_COLOR = \"#ff0000\";\n        this.DEFAULT_LINK_COLOR = \"#3a6bdb\";\n        this.onShowCode=this.onShowCode.bind(this);  //绑定消息监听函数\n    }\n   \n    render(){\n        let content = this.setContent(this.props); //props继承自panel，而panel的props来自App\n        return ( \n            <div style={{width: '100%', height:'100%'}}>\n                <div id=\"tab\">\n                    <div style={{backgroundColor:this.state.tab===1?\"#999\":\"#CCC\"}} onClick={this.setPTab.bind(this)}>顶点</div>\n                    <div style={{backgroundColor:this.state.tab===2?\"#999\":\"#CCC\"}} onClick={this.setLTab.bind(this)}>边</div>\n                    <div style={{backgroundColor:this.state.tab===3?\"#999\":\"#CCC\"}} onClick={this.setMatrixTab.bind(this)}>矩阵</div>\n                    <div style={{backgroundColor:this.state.tab===4?\"#999\":\"#CCC\"}} onClick={this.setCodeTab.bind(this)}>代码</div>\n                    <div style={{backgroundColor:this.state.tab===5?\"#999\":\"#CCC\"}} onClick={this.setActionTab.bind(this)}>动作</div>\n                </div>\n                <div id=\"tabContent\">{content}</div>\n            </div>\n        );\n    }\n\n    ///当GraphSVG组件传递代码过来时，调整tab状态，使其处于代码显示栏，同时更新代码\n    onShowCode(code){  \n        //this.setState({tab:4});  //更新tab状态则会自动跳转到代码栏\n        this.setState({code:code});\n    }\n\n    onShowAction(actions)\n    {\n        this.setState({tab:5});\n        this.setState({actions:actions});\n    }\n    \n    componentDidMount(){\n        eventProxy.on(window.showCode,this.onShowCode);     //window.showCode见index.js\n        eventProxy.on(window.showAction,this.onShowAction);  \n    }\n\n    //点击“顶点”\n    setPTab(){\n        this.setState({\n            tab: 1\n        });\n    }\n    //点击“边”\n    setLTab(){\n        this.setState({\n            tab: 2\n        });\n    }\n\n    //点击\"矩阵\"\n    setMatrixTab()\n    {\n        this.setState({\n            tab:3\n        });\n    }\n\n    //点击“代码”\n    setCodeTab(){\n        this.setState({\n            tab:4\n        });\n    }\n\n    //点击\"动作\"\n    setActionTab()\n    {\n        this.setState({\n            tab:5\n        });\n    }\n\n    //点击菜单后渲染\n    setContent( {node, link} ){\n        switch(this.state.tab){\n            case 1:\n                //顶点\n                return this.renderPoint(node);\n                break;\n            case 2:\n                //边\n                return this.renderLink(link);\n                break;\n            case 3:\n                return this.renderMatrix(node,link);\n                break;\n            case 4:\n                return this.renderCode();\n                break;\n            case 5:\n                return this.renderAction();\n                break;\n        }\n        return \"ERROR\";\n    }\n\n    renderPoint(nodes){\n        let td = nodes.map(node=>{\n            return (\n                <tr key={node.name}>\n                    <td>{node.name}</td>\n                    <td>{node.lng}</td>\n                    <td>{node.lat}</td>\n                </tr>\n            );\n        });\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <th>地点</th>\n                        <th>经度</th>\n                        <th>纬度</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {td}\n                </tbody>\n            </table>\n        );\n    }\n    renderLink(links){     //index应该是link元素在links中的索引\n        let td = links.map((link, index)=>{\n            let ifVisible = link.polyline.isVisible();\n            let color = link.polyline.getStrokeColor();\n            let ifHighlight = color === this.SELECTED_LINK_COLOR;\n\n            return (\n                <tr key={link+\"-\"+index} onClick={this.highlightLink(link).bind(this)} style={{backgroundColor:ifHighlight?\"#DDD\":\"#FFF\"}}>\n                    <td>{link.node1.name+\" -> \"+link.node2.name}</td>\n                    <td>{link.dis}</td>\n                    <td onClick={this.setLink(link).bind(this)}>{ifVisible?\"Yes\":\"No\"}</td>\n                </tr>\n            );\n        });\n\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <th>路线</th>\n                        <th>距离</th>\n                        <th>选择</th>\n                    </tr> \n                </thead>\n                <tbody>\n                    {td}\n                </tbody>\n            </table>\n        );\n    }\n   \n\n    renderMatrix(nodes,links)\n    {\n        const nodataGrid=<th></th>;               //空格\n        let horizonMatrxHead=nodes.map(node=>{　　//第一排表头\n                return(\n                    <th>{node.name}</th>\n                );\n        });\n        let maxtrixContent=nodes.map(node=>{     //表格内容\n            let headName=<th>{node.name}</th>;\n        \n            let name1=node.name;\n            let dists=nodes.map(node=>{\n                let dist;\n                let flag=0;\n                for(var i=0;i<links.length;i++)\n                {\n                    if((name1==links[i].node1.name && node.name==links[i].node2.name)||(name1==links[i].node2.name && node.name==links[i].node1.name))\n                    {\n                        dist=links[i].dis;\n                        flag=1;\n                    }\n                }\n                if(flag==1)                //两个点相连\n                    return(\n                        <td>{dist}</td>\n                    );\n                else\n                        return(\n                            <td >∞</td>\n                        );\n            });\n            return(\n                <tr>\n                {headName}\n                {dists}\n                </tr>\n            );\n        });\n\n        return(\n            <table align=\"center\">\n              {nodataGrid} \n              {horizonMatrxHead}\n              {maxtrixContent}\n            </table>\n        );\n    }\n\n    renderCode(){     //渲染代码，使用layer  (iframe高度无法使用相对高度，应为tabContent的限制)\n        return(\n            <textarea   cols=\"80\" rows=\"30\" value={this.state.code} autoFocus readOnly></textarea>\n        );\n    }\n   \n    renderAction()\n    {\n        let actions=this.state.actions;\n        let actionContent=actions.map(action=>{\n            return(\n               <tr>\n                   <td>\n                    {action}\n                   </td>\n               </tr>\n            );\n        });\n    }\n\n    highlightLink(link){\n        return function(event){\n            let links = this.props.link;\n            links.forEach(l=>{\n                l.polyline.setStrokeColor(this.DEFAULT_LINK_COLOR);\n            });\n            link.polyline.setStrokeColor(this.SELECTED_LINK_COLOR);\n            this.props.updateState(null, links);\n        }\n    }\n\n    setLink(link){\n        return function(event){\n            let links = this.props.link;\n            let visible = link.polyline.isVisible();\n\n            if(visible)link.polyline.hide();\n            else link.polyline.show();\n\n            this.props.updateState(null, links);\n        }\n    }\n}\n\nexport default GraphTable;"]},"metadata":{},"sourceType":"module"}